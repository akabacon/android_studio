package com.example.myapplication

import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.foundation.Image
import androidx.compose.foundation.background
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.lazy.LazyColumn
import androidx.compose.foundation.shape.CircleShape
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.material.*
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.draw.clip
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.layout.ContentScale
import androidx.compose.ui.modifier.modifierLocalOf
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import com.example.myapplication.ui.theme.MyApplicationTheme

class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            MyApplicationTheme {
                // A surface container using the 'background' color from the theme
                Surface(
                    modifier = Modifier.fillMaxSize(),
                    color = MaterialTheme.colors.background
                ) {
                    week6()
                }
            }
        }
    }
}

@Composable
fun week6(){
    Column(horizontalAlignment = Alignment.CenterHorizontally,
            modifier = Modifier.padding(20.dp)) {
        LazyColumn() {
            (1..20).forEachIndexed { index, i -> item {
                MyCard(R.drawable.bird, "Bird $i", "birds$i is beautiful!")
                Spacer(modifier = Modifier.height(10.dp))

            } }
        }
    }
}

@OptIn(ExperimentalMaterialApi::class)
@Composable
fun MyCard(imgId: Int, title: String, content: String) {
    Row(verticalAlignment = Alignment.CenterVertically,
        modifier = Modifier
            .size(width = 300.dp, height = 150.dp)
            .background(Color(0x8888FFAA))
            .padding(15.dp)
            .clip(
                RoundedCornerShape(20.dp)
            )) {
        Image(painter = painterResource(id = imgId),
            contentDescription = "Card",
            contentScale = ContentScale.Crop,
            modifier = Modifier
                .size(80.dp)
                .clip(CircleShape))
        Spacer(modifier = Modifier.width(30.dp))
        Column() {
            Text(text = title, fontSize = 30.sp, color = Color.Red)
            Spacer(modifier = Modifier.height(5.dp))
            Text(text = content, fontSize = 20.sp, color = Color.LightGray)
        }
    }
}
